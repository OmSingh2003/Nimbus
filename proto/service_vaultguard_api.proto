syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "user.proto";
import "rpc_verify_email.proto";
import "transfer.proto";
import "account.proto";

option go_package = "github.com/OmSingh2003/vaultguard-api/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "VaultGuard API"
    version: "1.2"
    description: "A secure vault management API"
    contact: {
      name: "Om Singh"
      url: "https://github.com/OmSingh2003/VaultGuard-API"
      email: "omsingh.ailearn@gmail.com"
    }
  }
  schemes: HTTPS
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
};

service VaultguardAPI {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Creates a new user account in the VaultGuard system. This endpoint validates user input, securely hashes passwords, and stores user credentials in the database. Returns user details upon successful creation."
      summary: "Create a new user account"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/update_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Updates user account in the VaultGuard system. This endpoint validates user input, securely hashes passwords if provided, and updates user credentials in the database. Returns updated user details upon successful modification."
      summary: "Updates user account"
    };
  }

  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Authenticates a user with their credentials and returns access tokens. This endpoint validates username/email and password, generates JWT tokens for session management, and provides secure access to protected resources."
      summary: "Authenticate user login"
    };
  }
 rpc VerifyEmail( VerifyEmailRequest) returns (VerifyEmailResponse) {
    option (google.api.http) = {
      get: "/v1/verify_email"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to verify email address";
      summary: "Verify Email"
    };
  }

  rpc CreateTransfer(CreateTransferRequest) returns (CreateTransferResponse) {
    option (google.api.http) = {
      post: "/v1/transfers"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Creates a new transfer between accounts. This endpoint validates account ownership, checks balances, and executes secure money transfers between accounts."
      summary: "Create a new transfer"
    };
  }

  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http) = {
      post: "/v1/accounts"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Creates a new account for the authenticated user. This endpoint validates the currency and creates an account with zero balance."
      summary: "Create a new account"
    };
  }

  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/v1/accounts/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Retrieves a specific account by ID. Only the account owner can access their account details."
      summary: "Get account by ID"
    };
  }

  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
    option (google.api.http) = {
      get: "/v1/accounts"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Lists all accounts owned by the authenticated user with pagination support."
      summary: "List user accounts"
    };
  }
}
