name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:

        image: postgres:17
        # Provide environment variables for postgres
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: root # User explicitly set to root
          POSTGRES_DB: vaultguard_api
        # Map port 5432 to host
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5 # Updated to v5 for latest features
      with:
        go-version: '1.22' 

    - name: Install migrate CLI
      run: |
        # Download and install the migrate CLI tool
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/migrate

    - name: Wait for PostgreSQL to be ready
      # This step implicitly waits for the service's health check to pass
      run: echo "PostgreSQL service is ready."

    - name: Run migrations
      # Using the directly installed migrate CLI for clarity and control
      run: |
       
        migrate -path db/migration -database "postgresql://root:secret@localhost:5432/vaultguard_api?sslmode=disable" -verbose up
      env:
       
        DATABASE_URL: "postgresql://root:secret@localhost:5432/vaultguard_api?sslmode=disable"

    - name: Download Go modules
      run: go mod download

    - name: Run Tests
     
      run: make test
